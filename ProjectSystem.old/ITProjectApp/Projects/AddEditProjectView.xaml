<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"              
    xmlns:local="clr-namespace:ITPM.App.Projects"
    
    
    xmlns:ControlHelper="clr-namespace:ITPM.App.ControlHelper"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mah="clr-namespace:MahApps.Metro.Controls;assembly=MahApps.Metro"
    
    
    xmlns:Controls="http://metro.mahapps.com/winfx/xaml/controls"    
    xmlns:b="http://schemas.microsoft.com/xaml/behaviors" x:Class="ITPM.App.Projects.AddEditProjectView"
    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="600">
    
    <UserControl.Resources>
        <Thickness x:Key="ControlMargin">0 5 0 0</Thickness>

        <ObjectDataProvider x:Key="NumericInputValues"
                            MethodName="GetValues"
                            ObjectType="{x:Type Controls:NumericInput}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="Controls:NumericInput" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="TextAlignmentValues"
                            MethodName="GetValues"
                            ObjectType="{x:Type TextAlignment}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="TextAlignment" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="ButtonsAlignmentValues"
                            MethodName="GetValues"
                            ObjectType="{x:Type Controls:ButtonsAlignment}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="Controls:ButtonsAlignment" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

    </UserControl.Resources>


    <Grid Background="White">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="100*"/>
            <ColumnDefinition Width="400*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="35*"/>
            <RowDefinition Height="106*"/>
            <RowDefinition Height="56*"/>
            <RowDefinition Height="169*"/>
            <RowDefinition Height="100*"/>
            <RowDefinition Height="150*"/>
            <RowDefinition Height="50*"/>
        </Grid.RowDefinitions>

        <Label Content="Project Name"
                Grid.Row ="1" 
                Grid.Column="0" 
                Margin="5,5,5,5"
                />
        <TextBox 
                Text="{Binding SelectedProject.ProjectName, UpdateSourceTrigger=PropertyChanged}"      
                Grid.Row ="1" 
                Grid.Column="1"
                Controls:TextBoxHelper.ButtonCommand="{Binding TextBoxButtonCmd, Mode=OneWay}"
                Controls:TextBoxHelper.ButtonContent="s"
                Controls:TextBoxHelper.Watermark="Enter a Concise Name for this Project/Idea"
                 />
        <Label Content="Project Concept"
                Grid.Row ="3" 
                Grid.Column="0" 
                Margin="5,5,5,5"               />


        <TextBox 
            Text="{Binding SelectedProject.ProjectConcept, UpdateSourceTrigger=PropertyChanged}"
            Grid.Row ="3"
            Grid.Column="1"                 
            TextWrapping="Wrap"
            AcceptsReturn="True"
            VerticalScrollBarVisibility="Visible"
            Margin="{StaticResource ControlMargin}"
            Controls:TextBoxHelper.ButtonCommand="{Binding TextBoxButtonCmd, Mode=OneWay}"
            Controls:TextBoxHelper.ButtonContent="s"
            Controls:TextBoxHelper.Watermark="Brief description of what the deliverable would be."
            SpellCheck.IsEnabled="True"/>

<!--
      
        
        -->
            <DockPanel 
            Grid.Column="1"
            Grid.Row="2"
            >
            <TextBlock DataContext="{Binding SelectedProject.Status}" Text="{Binding StatusName}"/>
            <!--  
            SelectedItem="{Binding SelectedProject.Status.StatusName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"    
            -->
             <ComboBox  
                x:Name="uxProjectStatusComboBox"
                Width="200"
                Margin="{StaticResource ControlMargin}"
                Controls:TextBoxHelper.UseFloatingWatermark="True"
                Controls:TextBoxHelper.Watermark="Status"
                DisplayMemberPath="StatusName"
                IsEditable="True"                                                   
                MaxDropDownHeight="125"                    
                ItemsSource="{Binding Statuses}"
                SelectedItem="{Binding ProjectStatus, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                IsSynchronizedWithCurrentItem="True" 
                Style="{DynamicResource MahApps.Styles.ComboBox.Virtualized}"/>
            <!--
                <Button x:Name="uxRefreshStatus" Content="Refresh Status" Click="uxRefreshStatus_Click"/>
-->
        </DockPanel>
        
        <DockPanel      
            Grid.Column="1"
            Grid.Row="4"
            HorizontalAlignment="Center" 
            >


            
            
          
            <Button Content="Delete Project"
                    MinWidth="100" MaxWidth="200"                    
                    MinHeight="20" MaxHeight="30"
                    Margin="5"             
                    Command="{Binding DataContext.DeleteProjectCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"                    
                    CommandParameter="{Binding SelectedProject}"
                    />


            <Button Content="Save"
                    MinWidth="100" MaxWidth="200"                    
                    MinHeight="20" MaxHeight="30"
                    Margin="5"
                    Command="{Binding DataContext.SaveProjectCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"   
                    CommandParameter="{Binding SelectedProject}"
                    />
            <Button Content="Add Another Project"
                    MinWidth="100" MaxWidth="200"                    
                    MinHeight="20" MaxHeight="30"
                    Margin="5" 
                    Command="{Binding DataContext.AddProjectCommand, RelativeSource={RelativeSource AncestorType={x:Type UserControl}}}"                                   
                    />
        </DockPanel>

        <!--
        <StackPanel Grid.Column="1" Grid.Row="5">
       
            <StackPanel Orientation="Horizontal">
                <Label Content="SelectedProjectStatus"/>
                <TextBlock DataContext="{Binding SelectedProjectStatus}" Text="{Binding StatusName}"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <Label Content="SelectedProject Status"/>
                <TextBlock DataContext="{Binding SelectedProject.Status}" Text="{Binding StatusName}"/>
            </StackPanel>
        </StackPanel>
        
        
        
                <ComboBox 
                Grid.Row="6"
            Grid.Column="1"
                ItemsSource="{Binding Statuses}"
                SelectedItem="{Binding SelectedProjectStatus, UpdateSourceTrigger=PropertyChanged }"                
                IsSynchronizedWithCurrentItem="True"
                Height="30" 
                Width="150">
            <ComboBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding StatusName}"/>
                </DataTemplate>
            </ComboBox.ItemTemplate>

        </ComboBox>
        
        -->

    </Grid>
</UserControl>
